# TODO:
# 1. Run Provider Pact tests: For the pact-webhook flow we ONLY need to run the pact-provider tests step - this should really be done with conditional workflows - I've just been lazy.
# 2. Can-I-Depploy: Use pact environments.
version: 2.1
parameters:
  pact-webhook:
    type: boolean
    default: false
  pact-consumer-name:
    type: string
    default: "default"
  pact-url:
    type: string
    default: "default"

jobs: # a collection of steps
  build:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"
    docker:
      - image: cimg/openjdk:17.0.1 # ...with this image as the primary container; this is where all `steps` will run
        auth:
          username: nathandeamer
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps: # a collection of executable commands
      - checkout
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: "Download pact-cli"
          command: |
            curl -LO https://github.com/pact-foundation/pact-ruby-standalone/releases/download/v1.88.83/pact-1.88.83-linux-x86_64.tar.gz
            tar xzf pact-1.88.83-linux-x86_64.tar.gz
      - run:
          name: Run tests
          command: |
            ./gradlew test
      - run:
          name: Run Consumer Pact tests
          command: |
            ./gradlew pactTest --tests *ConsumerPactTest
      - run:
          name: Publish Consumer Pacts
          command: |
            if [ -d build/pacts ]
            then
              ./pact/bin/pact-broker publish build/pacts --consumer-app-version=$CIRCLE_SHA1 --branch=$CIRCLE_BRANCH --tag-with-git-branch
            else
              echo "No Consumer Pacts found. Continuing...."
            fi
      - run:
          name: Run Provider Pact tests # Remember: A microservice can be a consumer and a provider. # Always publish the results from pipeline
          command: |
            if << pipeline.parameters.pact-webhook >>
            then
              ./gradlew pactTest -DpactPublishResults=true -Dpact.filter.consumers=<< pipeline.parameters.pact-consumer-name >> -Dpact.filter.pacturl=<< pipeline.parameters.pact-url >> --tests *ProviderPactTest
            else
              ./gradlew pactTest -DpactPublishResults=true --tests *ProviderPactTest
            fi
      - run:
          name: Can I deploy?
          command: |
            ./pact/bin/pact-broker can-i-deploy --pacticipant=$CIRCLE_PROJECT_REPONAME --version=$CIRCLE_SHA1
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - store_test_results:
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: build/test-results/test
      - store_artifacts: # Upload test results for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: build/test-results/test
      - store_artifacts:
          path: build/pacts
workflows:
  version: 2
  workflow:
    jobs:
      - build
